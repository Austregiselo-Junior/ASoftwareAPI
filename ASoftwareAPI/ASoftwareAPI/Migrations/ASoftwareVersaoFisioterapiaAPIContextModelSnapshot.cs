// <auto-generated />
using System;
using ASoftwareVersaoFisioterapiaAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASoftwareVersaoFisioterapiaAPI.Migrations
{
    [DbContext(typeof(ASoftwareVersaoFisioterapiaAPIContext))]
    partial class ASoftwareVersaoFisioterapiaAPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ASoftwareVersaoFisioterapiaAPI.Model.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CategoriaId"));

                    b.Property<float?>("Desconto")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<float?>("Parcelas")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("SituacaoFinanceira")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<float?>("ValorDaSessao")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<float?>("ValorDasParcelas")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<float?>("ValorTotal")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<DateTime>("Vencimento")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("ASoftwareVersaoFisioterapiaAPI.Model.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDaConsulta")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataDoCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("QuantidadeDeSessao")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ClienteId");

                    b.HasIndex("CategoriaId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ASoftwareVersaoFisioterapiaAPI.Model.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<DateTime>("DataDoCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ASoftwareVersaoFisioterapiaAPI.Model.Cliente", b =>
                {
                    b.HasOne("ASoftwareVersaoFisioterapiaAPI.Model.Categoria", "Categoria")
                        .WithOne("Cliente")
                        .HasForeignKey("ASoftwareVersaoFisioterapiaAPI.Model.Cliente", "CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASoftwareVersaoFisioterapiaAPI.Model.Usuario", "Usuario")
                        .WithMany("Clientes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ASoftwareVersaoFisioterapiaAPI.Model.Categoria", b =>
                {
                    b.Navigation("Cliente")
                        .IsRequired();
                });

            modelBuilder.Entity("ASoftwareVersaoFisioterapiaAPI.Model.Usuario", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
